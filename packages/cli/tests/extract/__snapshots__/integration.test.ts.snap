// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[glob] basic case: defineMessages -> stdout 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"defaultMessage\\": \\"No ID\\",
    \\"description\\": \\"no ID\\"
  },
  \\"app.home.kittens\\": {
    \\"defaultMessage\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\",
    \\"description\\": \\"Counts kittens\\"
  },
  \\"escaped.apostrophe\\": {
    \\"defaultMessage\\": \\"A quoted value ''{value}'\\",
    \\"description\\": \\"Escaped apostrophe\\"
  },
  \\"foo.bar.baz\\": {
    \\"defaultMessage\\": \\"Hello World!\\",
    \\"description\\": \\"The default message\\"
  },
  \\"foo.bar.biff\\": {
    \\"defaultMessage\\": \\"Hello Nurse!\\",
    \\"description\\": \\"Another message\\"
  },
  \\"ignore\\": {
    \\"defaultMessage\\": \\"ignore\\"
  },
  \\"inline-msg\\": {
    \\"defaultMessage\\": \\"inline message\\",
    \\"description\\": \\"inline description\\"
  },
  \\"trailing.ws\\": {
    \\"defaultMessage\\": \\"Some whitespace\\",
    \\"description\\": \\"Whitespace\\"
  }
}
",
}
`;

exports[`basic case: defineMessages -> out-file 1`] = `
Object {
  "stderr": "",
  "stdout": "",
}
`;

exports[`basic case: defineMessages -> out-file 2`] = `
Object {
  "ae494": Object {
    "defaultMessage": "No ID",
    "description": "no ID",
  },
  "app.home.kittens": Object {
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
  },
  "escaped.apostrophe": Object {
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
  },
  "foo.bar.baz": Object {
    "defaultMessage": "Hello World!",
    "description": "The default message",
  },
  "foo.bar.biff": Object {
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
  },
  "inline-msg": Object {
    "defaultMessage": "inline message",
    "description": "inline description",
  },
  "trailing.ws": Object {
    "defaultMessage": "Some whitespace",
    "description": "Whitespace",
  },
}
`;

exports[`basic case: defineMessages -> out-file with location 1`] = `
Object {
  "stderr": "",
  "stdout": "",
}
`;

exports[`basic case: defineMessages -> out-file with location 2`] = `
Object {
  "ae494": Object {
    "col": 18,
    "defaultMessage": "No ID",
    "description": "no ID",
    "end": 937,
    "file": "defineMessages/actual.js",
    "line": 34,
    "start": 876,
  },
  "app.home.kittens": Object {
    "col": 10,
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
    "end": 522,
    "file": "defineMessages/actual.js",
    "line": 15,
    "start": 372,
  },
  "escaped.apostrophe": Object {
    "col": 10,
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
    "end": 786,
    "file": "defineMessages/actual.js",
    "line": 25,
    "start": 662,
  },
  "foo.bar.baz": Object {
    "col": 9,
    "defaultMessage": "Hello World!",
    "description": "The default message",
    "end": 246,
    "file": "defineMessages/actual.js",
    "line": 5,
    "start": 141,
  },
  "foo.bar.biff": Object {
    "col": 10,
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
    "end": 360,
    "file": "defineMessages/actual.js",
    "line": 10,
    "start": 258,
  },
  "inline-msg": Object {
    "col": 10,
    "defaultMessage": "inline message",
    "description": "inline description",
    "end": 1416,
    "file": "defineMessages/actual.js",
    "line": 53,
    "start": 1269,
  },
  "trailing.ws": Object {
    "col": 21,
    "defaultMessage": "Some whitespace",
    "description": "Whitespace",
    "end": 650,
    "file": "defineMessages/actual.js",
    "line": 20,
    "start": 545,
  },
}
`;

exports[`basic case: defineMessages -> stdout 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"defaultMessage\\": \\"No ID\\",
    \\"description\\": \\"no ID\\"
  },
  \\"app.home.kittens\\": {
    \\"defaultMessage\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\",
    \\"description\\": \\"Counts kittens\\"
  },
  \\"escaped.apostrophe\\": {
    \\"defaultMessage\\": \\"A quoted value ''{value}'\\",
    \\"description\\": \\"Escaped apostrophe\\"
  },
  \\"foo.bar.baz\\": {
    \\"defaultMessage\\": \\"Hello World!\\",
    \\"description\\": \\"The default message\\"
  },
  \\"foo.bar.biff\\": {
    \\"defaultMessage\\": \\"Hello Nurse!\\",
    \\"description\\": \\"Another message\\"
  },
  \\"inline-msg\\": {
    \\"defaultMessage\\": \\"inline message\\",
    \\"description\\": \\"inline description\\"
  },
  \\"trailing.ws\\": {
    \\"defaultMessage\\": \\"Some whitespace\\",
    \\"description\\": \\"Whitespace\\"
  }
}
",
}
`;

exports[`basic case: help 1`] = `
Object {
  "stderr": "",
  "stdout": "Usage: formatjs extract [options] [files...]

Extract string messages from React components that use react-intl.
The input language is expected to be TypeScript or ES2017 with JSX.

Options:
  --format <path>                                       Path to a formatter file that controls the shape of JSON file from \`--out-file\`.
  The formatter file must export a function called \`format\` with the signature
  \`\`\`
  type FormatFn = <T = Record<string, MessageDescriptor>>(
    msgs: Record<string, MessageDescriptor>
  ) => T
  \`\`\` 
  This is especially useful to convert from our extracted format to a TMS-specific format.
  
  --out-file <path>                                     The target file path where the plugin will output an aggregated 
  \`.json\` file of all the translations from the \`files\` supplied.
  --id-interpolation-pattern <pattern>                  If certain message descriptors don't have id, this \`pattern\` will be used to automatically
  generate IDs for them. Default to \`[contenthash:5]\` where \`contenthash\` is the hash of
  \`defaultMessage\` and \`description\`.
  See https://github.com/webpack/loader-utils#interpolatename for sample patterns (default: \\"[contenthash:5]\\")
  --extract-source-location                             Whether the metadata about the location of the message in the source file should be 
  extracted. If \`true\`, then \`file\`, \`start\`, and \`end\` fields will exist for each 
  extracted message descriptors. (default: false)
  --remove-default-message                              Remove \`defaultMessage\` field in generated js after extraction (default: false)
  --additional-component-names <comma-separated-names>  Additional component names to extract messages from, e.g: \`['FormattedFooBarMessage']\`. 
  **NOTE**: By default we check for the fact that \`FormattedMessage\` 
  is imported from \`moduleSourceName\` to make sure variable alias 
  works. This option does not do that so it's less safe.
  --extract-from-format-message-call                    Opt-in to extract from \`intl.formatMessage\` call with the same restrictions, e.g: has 
  to be called with object literal such as \`intl.formatMessage({ id: 'foo', defaultMessage: 
  'bar', description: 'baz'}) (default: true)
  --ignore <files...>                                   List of glob paths to **not** extract translations from.
  --throws                                              Whether to throw an exception when we fail to process any file in the batch.
  --pragma <pragma>                                     parse specific additional custom pragma. This allows you to tag certain file with metadata such as \`project\`. For example with this file:
  
        \`\`\`
        // @intl-meta project:my-custom-project
        import {FormattedMessage} from 'react-intl';
  
        <FormattedMessage defaultMessage=\\"foo\\" id=\\"bar\\" />;
        \`\`\`
  
        and with option \`{pragma: \\"intl-meta\\"}\`, we'll parse out \`// @intl-meta project:my-custom-project\` into \`{project: 'my-custom-project'}\` in the result file.
  -h, --help                                            display help for command
",
}
`;

exports[`duplicated descriptor ids shows warning 1`] = `
Object {
  "foo": Object {
    "defaultMessage": "Bar",
  },
}
`;

exports[`ignore -> stdout JS 1`] = `
Object {
  "ae494": Object {
    "defaultMessage": "No ID",
    "description": "no ID",
  },
  "app.home.kittens": Object {
    "defaultMessage": "{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}",
    "description": "Counts kittens",
  },
  "escaped.apostrophe": Object {
    "defaultMessage": "A quoted value ''{value}'",
    "description": "Escaped apostrophe",
  },
  "foo.bar.baz": Object {
    "defaultMessage": "Hello World!",
    "description": "The default message",
  },
  "foo.bar.biff": Object {
    "defaultMessage": "Hello Nurse!",
    "description": "Another message",
  },
  "ignore": Object {
    "defaultMessage": "ignore",
  },
  "inline-msg": Object {
    "defaultMessage": "inline message",
    "description": "inline description",
  },
  "trailing.ws": Object {
    "defaultMessage": "Some whitespace",
    "description": "Whitespace",
  },
}
`;

exports[`ignore -> stdout TS 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"defaultMessage\\": \\"No ID\\",
    \\"description\\": \\"no ID\\"
  },
  \\"app.home.kittens\\": {
    \\"defaultMessage\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\",
    \\"description\\": \\"Counts kittens\\"
  },
  \\"c63ed\\": {
    \\"defaultMessage\\": \\"No Desc\\"
  },
  \\"escaped.apostrophe\\": {
    \\"defaultMessage\\": \\"A quoted value ''{value}'\\",
    \\"description\\": \\"Escaped apostrophe\\"
  },
  \\"foo.bar.baz\\": {
    \\"defaultMessage\\": \\"Hello World!\\",
    \\"description\\": \\"The default message\\"
  },
  \\"foo.bar.biff\\": {
    \\"defaultMessage\\": \\"Hello Nurse!\\",
    \\"description\\": \\"Another message\\"
  },
  \\"inline\\": {
    \\"defaultMessage\\": \\"formatted message\\",
    \\"description\\": \\"foo\\"
  },
  \\"trailing.ws\\": {
    \\"defaultMessage\\": \\"Some whitespace\\",
    \\"description\\": \\"Whitespace\\"
  }
}
",
}
`;

exports[`pragma 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"defaultMessage\\": \\"No ID\\",
    \\"description\\": \\"no ID\\",
    \\"meta\\": {
      \\"baz\\": \\"1\\",
      \\"foo\\": \\"bar\\"
    }
  },
  \\"app.home.kittens\\": {
    \\"defaultMessage\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\",
    \\"description\\": \\"Counts kittens\\",
    \\"meta\\": {
      \\"baz\\": \\"1\\",
      \\"foo\\": \\"bar\\"
    }
  },
  \\"c63ed\\": {
    \\"defaultMessage\\": \\"No Desc\\",
    \\"meta\\": {
      \\"baz\\": \\"1\\",
      \\"foo\\": \\"bar\\"
    }
  },
  \\"escaped.apostrophe\\": {
    \\"defaultMessage\\": \\"A quoted value ''{value}'\\",
    \\"description\\": \\"Escaped apostrophe\\",
    \\"meta\\": {
      \\"baz\\": \\"1\\",
      \\"foo\\": \\"bar\\"
    }
  },
  \\"foo.bar.baz\\": {
    \\"defaultMessage\\": \\"Hello World!\\",
    \\"description\\": \\"The default message\\",
    \\"meta\\": {
      \\"baz\\": \\"1\\",
      \\"foo\\": \\"bar\\"
    }
  },
  \\"foo.bar.biff\\": {
    \\"defaultMessage\\": \\"Hello Nurse!\\",
    \\"description\\": \\"Another message\\",
    \\"meta\\": {
      \\"baz\\": \\"1\\",
      \\"foo\\": \\"bar\\"
    }
  },
  \\"inline\\": {
    \\"defaultMessage\\": \\"formatted message\\",
    \\"description\\": \\"foo\\",
    \\"meta\\": {
      \\"baz\\": \\"1\\",
      \\"foo\\": \\"bar\\"
    }
  },
  \\"trailing.ws\\": {
    \\"defaultMessage\\": \\"Some whitespace\\",
    \\"description\\": \\"Whitespace\\",
    \\"meta\\": {
      \\"baz\\": \\"1\\",
      \\"foo\\": \\"bar\\"
    }
  }
}
",
}
`;

exports[`typescript -> stdout 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"defaultMessage\\": \\"No ID\\",
    \\"description\\": \\"no ID\\"
  },
  \\"app.home.kittens\\": {
    \\"defaultMessage\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\",
    \\"description\\": \\"Counts kittens\\"
  },
  \\"c63ed\\": {
    \\"defaultMessage\\": \\"No Desc\\"
  },
  \\"escaped.apostrophe\\": {
    \\"defaultMessage\\": \\"A quoted value ''{value}'\\",
    \\"description\\": \\"Escaped apostrophe\\"
  },
  \\"foo.bar.baz\\": {
    \\"defaultMessage\\": \\"Hello World!\\",
    \\"description\\": \\"The default message\\"
  },
  \\"foo.bar.biff\\": {
    \\"defaultMessage\\": \\"Hello Nurse!\\",
    \\"description\\": \\"Another message\\"
  },
  \\"inline\\": {
    \\"defaultMessage\\": \\"formatted message\\",
    \\"description\\": \\"foo\\"
  },
  \\"trailing.ws\\": {
    \\"defaultMessage\\": \\"Some whitespace\\",
    \\"description\\": \\"Whitespace\\"
  }
}
",
}
`;

exports[`typescript -> stdout with crowdin 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"description\\": \\"no ID\\",
    \\"message\\": \\"No ID\\"
  },
  \\"app.home.kittens\\": {
    \\"description\\": \\"Counts kittens\\",
    \\"message\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\"
  },
  \\"c63ed\\": {
    \\"message\\": \\"No Desc\\"
  },
  \\"escaped.apostrophe\\": {
    \\"description\\": \\"Escaped apostrophe\\",
    \\"message\\": \\"A quoted value ''{value}'\\"
  },
  \\"foo.bar.baz\\": {
    \\"description\\": \\"The default message\\",
    \\"message\\": \\"Hello World!\\"
  },
  \\"foo.bar.biff\\": {
    \\"description\\": \\"Another message\\",
    \\"message\\": \\"Hello Nurse!\\"
  },
  \\"inline\\": {
    \\"description\\": \\"foo\\",
    \\"message\\": \\"formatted message\\"
  },
  \\"trailing.ws\\": {
    \\"description\\": \\"Whitespace\\",
    \\"message\\": \\"Some whitespace\\"
  }
}
",
}
`;

exports[`typescript -> stdout with formatter 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"comment\\": \\"no ID\\",
    \\"string\\": \\"No ID\\"
  },
  \\"app.home.kittens\\": {
    \\"comment\\": \\"Counts kittens\\",
    \\"string\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\"
  },
  \\"c63ed\\": {
    \\"string\\": \\"No Desc\\"
  },
  \\"escaped.apostrophe\\": {
    \\"comment\\": \\"Escaped apostrophe\\",
    \\"string\\": \\"A quoted value ''{value}'\\"
  },
  \\"foo.bar.baz\\": {
    \\"comment\\": \\"The default message\\",
    \\"string\\": \\"Hello World!\\"
  },
  \\"foo.bar.biff\\": {
    \\"comment\\": \\"Another message\\",
    \\"string\\": \\"Hello Nurse!\\"
  },
  \\"inline\\": {
    \\"comment\\": \\"foo\\",
    \\"string\\": \\"formatted message\\"
  },
  \\"trailing.ws\\": {
    \\"comment\\": \\"Whitespace\\",
    \\"string\\": \\"Some whitespace\\"
  }
}
",
}
`;

exports[`typescript -> stdout with lokalise 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"notes\\": \\"no ID\\",
    \\"translation\\": \\"No ID\\"
  },
  \\"app.home.kittens\\": {
    \\"notes\\": \\"Counts kittens\\",
    \\"translation\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\"
  },
  \\"c63ed\\": {
    \\"translation\\": \\"No Desc\\"
  },
  \\"escaped.apostrophe\\": {
    \\"notes\\": \\"Escaped apostrophe\\",
    \\"translation\\": \\"A quoted value ''{value}'\\"
  },
  \\"foo.bar.baz\\": {
    \\"notes\\": \\"The default message\\",
    \\"translation\\": \\"Hello World!\\"
  },
  \\"foo.bar.biff\\": {
    \\"notes\\": \\"Another message\\",
    \\"translation\\": \\"Hello Nurse!\\"
  },
  \\"inline\\": {
    \\"notes\\": \\"foo\\",
    \\"translation\\": \\"formatted message\\"
  },
  \\"trailing.ws\\": {
    \\"notes\\": \\"Whitespace\\",
    \\"translation\\": \\"Some whitespace\\"
  }
}
",
}
`;

exports[`typescript -> stdout with simple 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": \\"No ID\\",
  \\"app.home.kittens\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\",
  \\"c63ed\\": \\"No Desc\\",
  \\"escaped.apostrophe\\": \\"A quoted value ''{value}'\\",
  \\"foo.bar.baz\\": \\"Hello World!\\",
  \\"foo.bar.biff\\": \\"Hello Nurse!\\",
  \\"inline\\": \\"formatted message\\",
  \\"trailing.ws\\": \\"Some whitespace\\"
}
",
}
`;

exports[`typescript -> stdout with smartling 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"smartling\\": {
    \\"translate_paths\\": [
      {
        \\"instruction\\": \\"*/description\\",
        \\"key\\": \\"{*}/message\\",
        \\"path\\": \\"*/message\\"
      }
    ],
    \\"variants_enabled\\": true
  },
  \\"ae494\\": {
    \\"description\\": \\"no ID\\",
    \\"message\\": \\"No ID\\"
  },
  \\"app.home.kittens\\": {
    \\"description\\": \\"Counts kittens\\",
    \\"message\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\"
  },
  \\"c63ed\\": {
    \\"message\\": \\"No Desc\\"
  },
  \\"escaped.apostrophe\\": {
    \\"description\\": \\"Escaped apostrophe\\",
    \\"message\\": \\"A quoted value ''{value}'\\"
  },
  \\"foo.bar.baz\\": {
    \\"description\\": \\"The default message\\",
    \\"message\\": \\"Hello World!\\"
  },
  \\"foo.bar.biff\\": {
    \\"description\\": \\"Another message\\",
    \\"message\\": \\"Hello Nurse!\\"
  },
  \\"inline\\": {
    \\"description\\": \\"foo\\",
    \\"message\\": \\"formatted message\\"
  },
  \\"trailing.ws\\": {
    \\"description\\": \\"Whitespace\\",
    \\"message\\": \\"Some whitespace\\"
  }
}
",
}
`;

exports[`typescript -> stdout with transifex 1`] = `
Object {
  "stderr": "",
  "stdout": "{
  \\"ae494\\": {
    \\"developer_comment\\": \\"no ID\\",
    \\"string\\": \\"No ID\\"
  },
  \\"app.home.kittens\\": {
    \\"developer_comment\\": \\"Counts kittens\\",
    \\"string\\": \\"{count, plural, =0 {ðŸ˜­} one {# kitten} other {# kittens}}\\"
  },
  \\"c63ed\\": {
    \\"string\\": \\"No Desc\\"
  },
  \\"escaped.apostrophe\\": {
    \\"developer_comment\\": \\"Escaped apostrophe\\",
    \\"string\\": \\"A quoted value ''{value}'\\"
  },
  \\"foo.bar.baz\\": {
    \\"developer_comment\\": \\"The default message\\",
    \\"string\\": \\"Hello World!\\"
  },
  \\"foo.bar.biff\\": {
    \\"developer_comment\\": \\"Another message\\",
    \\"string\\": \\"Hello Nurse!\\"
  },
  \\"inline\\": {
    \\"developer_comment\\": \\"foo\\",
    \\"string\\": \\"formatted message\\"
  },
  \\"trailing.ws\\": {
    \\"developer_comment\\": \\"Whitespace\\",
    \\"string\\": \\"Some whitespace\\"
  }
}
",
}
`;
